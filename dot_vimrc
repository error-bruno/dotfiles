set relativenumber
set number
set cursorline
set signcolumn=yes " Display gutter
set encoding=UTF-8
"set guifont=Roboto\ Mono\ Light\ Nerd\ Font:h11
"set guifont=Roboto\ Mono\ Light\ Nerd\ Font:h11
set hidden
set showtabline=2

syntax on

" mapleaders
let mapleader = ","
map <leader>n :NERDTreeToggle<CR>
map <leader>t :TagbarToggle<CR>
nnoremap <leader>r :source ~/.vimrc<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>

" nmap
nmap <C-p> :Files<CR>

filetype plugin indent on

" Set tabstops
set tabstop=2 shiftwidth=2 softtabstop=2 expandtab
set showcmd            "  show command in bottom bar
set wildmenu           "  visual autocomplete for command menu
set showmatch          "  highlight matching [{()}]

" show invisible
set list
set listchars=
set listchars+=tab:·\·
set listchars+=trail:·
set listchars+=extends:»
set listchars+=precedes:«
set listchars+=nbsp:░

" search
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
nnoremap <leader><space> :nohlsearch<CR> " unhilights matches
set ignorecase
set smartcase

" Don't auto save backups
set nobackup
set nowritebackup
set noswapfile

" Nerdtree
let NERDTreeShowHidden=1
let NERDTreeDirArrowExpandable = "\u00a0" " make arrows invisible
let NERDTreeDirArrowCollapsible = "\u00a0" " make arrows invisible
let NERDTreeNodeDelimiter = "\u263a" " smiley face

nnoremap <c-\> :NERDTreeToggle<CR>
let g:NERDTreeHighlightFolders = 1
let g:NERDTreeHighlightFoldersFullName = 1
let g:WebDevIconsUnicodeDecorateFolderNodes = 1 " enable folder glyph flag
let g:DevIconsEnableFoldersOpenClose = 1
let g:DevIconsEnableFolderExtensionPatternMatching = 1
let g:webdevicons_conceal_nerdtree_brackets = 1

" DevIcons
let g:WebDevIconsUnicodeDecorateFolderNodes = 1

" vim-javascript
let g:javascript_plugin_flow = 1

" gitgutter
let g:gitgutter_async=0
let g:gitgutter_realtime = 1
let g:gitgutter_eager = 1
set updatetime=250

" ale
let g:ale_fixers = {
 \ 'javascript': ['eslint'],
 \ 'python': ['autopep8', 'remove_trailing_lines', 'trim_whitespace'],
 \ '*': ['remove_trailing_lines', 'trim_whitespace'],
 \ }
let g:ale_linters = {
 \ 'python': ['pylint']
 \}
let g:ale_linters_ignore = ['tsserver']
let g:ale_sign_error = '❌'
let g:ale_sign_warning = '⚠️'
let g:ale_fix_on_save = 1
let g:ale_sign_column_always = 1

" deoplete
let g:deoplete#enable_at_startup = 1

" coc
" Use tab for trigger completion with characters ahead and navigate.
" Use command ':verbose imap <tab>' to make sure tab is not mapped by other
" plugin.
inoremap <silent><expr> <TAB>
 \ pumvisible() ? "\<C-n>" :
 \ <SID>check_back_space() ? "\<TAB>" :
 \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
inoremap <silent><expr> <c-space> coc#refresh()

so ~/.vim/plugins.vim
so ~/.vim/status-line.vim
so ~/.vim/theme.vim
so ~/.vim/highlight.vim
